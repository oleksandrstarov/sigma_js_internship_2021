{"version":3,"sources":["components/ThemeToggle.tsx","models/index.tsx","components/SearchField.tsx","components/Header.tsx","components/Container.tsx","components/Link.tsx","components/Contacts.tsx","components/Footer.tsx","components/Main.tsx","components/Layout.tsx","hooks/useDeviceDetect.tsx","constants/api.tsx","components/PopularMovie.tsx","axios/url.tsx","service/api.tsx","components/MovieBanner.tsx","components/MoviesList.tsx","config/routing.tsx","components/Home.tsx","components/MovieDetails.tsx","components/Favorites.tsx","components/SearchResults.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Theme","ThemeImage","dark","light","ThemeToggler","useState","theme","setTheme","checked","onChange","className","id","type","htmlFor","src","alt","SearchField","inputValue","setInputValue","onSubmit","event","preventDefault","trim","console","log","value","target","placeholder","Header","isScrolled","setIsScrolled","onScroll","window","pageYOffset","useEffect","addEventListener","removeEventListener","href","innerWidth","Container","children","Link","Contacts","Footer","Main","Layout","useDeviceDetect","isMobile","setIsMobile","width","API_KEY","API_IMG_URL","PopularMovie","movie","mobile","overview","title","poster_path","vote_average","backdrop_path","starRaitingIcon","mobileImgPath","desktopImgPath","starRaitingArr","length","slice","to","map","icon","index","pathname","url","axios","create","baseURL","apiService","storeKey","store","history","favorites","api","getStore","serviceStore","localStorage","getItem","JSON","parse","this","setStore","data","setItem","stringify","switchTheme","setFavoritesId","includes","push","getFavoritsIdList","deleteFavoritsId","filter","itemId","clearFavoritsIdList","setHistoryId","getHistoryIdList","deleteHistoryId","clearHistoryIdList","getDataByIds","ids","requests","a","get","then","res","Promise","all","getDataById","obj","results","getPopularQueryList","getTopRatedList","getSearchList","query","changeImgLinks","size","MovieBanner","popularMovies","setPopularMovies","randomMovie","Math","floor","random","MoviesList","props","useParams","genre","pageTitle","path","name","exact","component","App","routing","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f769d0e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport '../styles/ThemeToggle.scss';\n\nenum Theme {\n  dark,\n  light\n}\n\nconst ThemeImage = {\n  [Theme.dark]: '/images/moon.svg',\n  [Theme.light]: '/images/sun.svg'\n};\n\nconst ThemeToggler = () => {\n  const [theme, setTheme] = useState(Theme.light);\n\n  const handleToggle = (): void => {\n    setTheme(theme === Theme.light ? Theme.dark : Theme.light);\n  };\n\n  return (\n    <>\n      <input\n        checked={!!theme}\n        onChange={handleToggle}\n        className=\"switch-checkbox\"\n        id=\"switch-new\"\n        type=\"checkbox\"\n      />\n      <label className={`switch-label ${Theme[theme]}`} htmlFor=\"switch-new\">\n        <img src={ThemeImage[theme]} alt=\"icon\" className=\"switch-button\" />\n      </label>\n    </>\n  );\n};\n\nexport default ThemeToggler;\n","export interface Movie {\n  overview: string;\n  title: string;\n  poster_path: string;\n  vote_average: number;\n  backdrop_path: string;\n  id: number | string;\n}\n\nexport interface PopularMovieProps {\n  movie: Movie;\n}\n\nexport enum Theme {\n  dark,\n  light,\n}\n","import React, { useState } from 'react';\n\nconst loupeIcon = '/images/search-icon.svg';\n\nconst SearchField: React.FC = () => {\n  const [inputValue, setInputValue] = useState<string>('');\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const submitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (inputValue.trim()) {\n      console.log(inputValue);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={submitHandler} className=\"search-form\">\n        <input\n          value={inputValue}\n          onChange={changeHandler}\n          id=\"search\"\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"header-search\"\n        />\n\n        <button type=\"submit\">\n          <img src={loupeIcon} alt=\"search-icon\" />\n        </button>\n      </form>\n    </>\n  );\n};\nexport default SearchField;\n","import { useState, useEffect } from 'react';\nimport ThemeToggler from './ThemeToggle';\n\nimport '../styles/Header.scss';\nimport SearchField from './SearchField';\n\nconst imageXl = '/images/logo-xl.svg';\nconst imageSm = '/images/logo-sm.svg';\nconst heart = '/images/heart.svg';\n\nconst Header = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const onScroll = () => {\n    if (window.pageYOffset > 30) {\n      setIsScrolled(true);\n    } else {\n      setIsScrolled(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n\n  return (\n    <header className={isScrolled ? 'active' : ''}>\n      <div className=\"container\">\n        <a href=\"/\" className=\"header-logo\">\n          <img src={window.innerWidth < 992 ? imageSm : imageXl} alt=\"logo\" />\n        </a>\n        <SearchField />\n        <a href=\"/favorites\" className=\"header-nav-link\">\n          <span>Favorites</span>\n          <img src={heart} />\n        </a>\n        <ThemeToggler />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ReactNode } from 'react';\n\ntype ContainerProps = {\n  children: ReactNode;\n};\n\nconst Container = ({ children }: ContainerProps) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","import { ReactNode } from 'react';\n\ntype LinkProps = {\n  href: string;\n  children?: ReactNode;\n  className?: string;\n};\n\nconst Link = ({ href, children, className }: LinkProps) => {\n  return (\n    <a href={href} className={`default-link ${className ? className : ''}`}>\n      {children ? children : ''}\n    </a>\n  );\n};\n\nexport default Link;\n","import Container from './Container';\nimport Link from './Link';\n\nimport '../styles/Contacts.scss';\n\nconst Contacts = () => {\n  const facebookIcon = '/images/footerIcons/facebook.svg';\n  const githubIcon = '/images/footerIcons/github.svg';\n  const youtubeIcon = '/images/footerIcons/youtube.svg';\n  const telegramIcon = '/images/footerIcons/telegram.svg';\n\n  return (\n    <section className=\"contacts\">\n      <Container>\n        <div className=\"contacts-body\">\n          <div className=\"contacts-icons\">\n            <Link href=\"#!\" className=\"contacts-icon-link\">\n              <img\n                src={facebookIcon}\n                alt=\"facebook\"\n                className=\"contacts-icon\"\n              />\n            </Link>\n            <Link href=\"#!\" className=\"contacts-icon-link\">\n              <img src={githubIcon} alt=\"github\" className=\"contacts-icon\" />\n            </Link>\n            <Link href=\"#!\" className=\"contacts-icon-link\">\n              <img src={youtubeIcon} alt=\"youtube\" className=\"contacts-icon\" />\n            </Link>\n            <Link href=\"#!\" className=\"contacts-icon-link\">\n              <img\n                src={telegramIcon}\n                alt=\"telegram\"\n                className=\"contacts-icon\"\n              />\n            </Link>\n          </div>\n          <div className=\"contacts-details\">\n            <p className=\"contacts-details-title\">Our Contacts</p>\n            <div className=\"contacts-info\">\n              <Link className=\"contacts-info-item\" href=\"tel:+88005553535\">\n                Phone: +88005553535\n              </Link>\n              <Link\n                className=\"contacts-info-item\"\n                href=\"mailto:lorem@ipsum.com\">\n                Email: lorem@ipsum.com\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Contacts;\n","import Container from './Container';\n\nimport '../styles/Footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <div className=\"footer-body\">\n          <p className=\"footer-details\">\n            Created by students of sigma software\n          </p>\n          <p className=\"footer-details\">® All rights reserved</p>\n        </div>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { ReactNode } from 'react';\n\nimport '../App.scss';\n\ninterface MainProps {\n  children: ReactNode;\n}\n\nconst Main = ({ children }: MainProps) => {\n  return <main className=\"main\">{children}</main>;\n};\n\nexport default Main;\n","import { ReactNode } from 'react';\n\nimport Header from './Header';\nimport Contacts from './Contacts';\nimport Footer from './Footer';\nimport Main from './Main';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Main>{children}</Main>\n      <Contacts />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useEffect, useState } from 'react';\n\nconst mobileMaxWidth = 992;\n\nconst useDeviceDetect = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const width = window.innerWidth;\n\n    setIsMobile(width <= mobileMaxWidth);\n  }, []);\n\n  return isMobile;\n};\n\nexport default useDeviceDetect;\n","export const API_KEY = 'api_key=157c2ade7d0b335008ae899a157d8967';\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/';\nexport const API_DATE_QUERY = 'primary_release_date.lte=';","import { Link } from 'react-router-dom';\n\nimport useDeviceDetect from '../hooks/useDeviceDetect';\nimport { PopularMovieProps } from '../models/index';\nimport { API_IMG_URL } from '../constants/api';\n\nimport '../styles/MovieBanner.scss';\n\nconst PopularMovie: React.FC<PopularMovieProps> = ({ movie }) => {\n  const mobile = useDeviceDetect();\n  const {\n    overview,\n    title,\n    poster_path,\n    vote_average,\n    backdrop_path,\n    id\n  } = movie;\n\n  const btnIcon = '/images/btn-icon.png';\n  const starRaitingIcon = '/images/star.svg';\n  const mobileImgPath = `${API_IMG_URL}original/${poster_path}`;\n  const desktopImgPath = `${API_IMG_URL}original/${backdrop_path}`;\n  const starRaitingArr: string[] = [\n    starRaitingIcon,\n    starRaitingIcon,\n    starRaitingIcon,\n    starRaitingIcon,\n    starRaitingIcon\n  ];\n\n  return (\n    <div className=\"movie-banner-body\">\n      <div className=\"movie-image-container\">\n        <img\n          src={mobile ? mobileImgPath : desktopImgPath}\n          className=\"movie-banner-image\"\n          alt={movie.title}\n        />\n        <div className=\"movie-image-overlay\"></div>\n      </div>\n      <div className=\"movie-banner-details\">\n        <h3 className=\"movie-title\">{title}</h3>\n        <p\n          className={`movie-description ${\n            window.innerWidth < 767 ? 'text-overlow' : ''\n          }`}>\n          {overview.length >= 250 ? (\n            <span>\n              {overview.slice(0, 250)}\n              <Link className=\"movie-read-more\" to={`/movie-details/:${id} `}>\n                <span>...Read more</span>\n              </Link>\n            </span>\n          ) : (\n            overview\n          )}\n        </p>\n        <div className=\"movie-rating-container\">\n          <p className=\"movie-rating-box\">\n            <span className=\"movie-rating\">IMDB</span>\n            <span className=\"movie-rating movie-rating-number\">\n              {vote_average}\n            </span>\n          </p>\n          <div className=\"movie-rating-stars\">\n            {starRaitingArr.map((icon, index) => (\n              <img src={icon} key={index} alt=\"icon star\" />\n            ))}\n          </div>\n        </div>\n        <Link to={{ pathname: `movie-details/${id}` }} className=\"movie-btn\">\n          <span className=\"movie-btn-title\">View details</span>\n          <img src={btnIcon} alt=\"btn icon\" className=\"movie-btn-icon\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PopularMovie;\n","import axios from 'axios';\n\nimport { API_URL } from '../constants/api';\n\nconst url = axios.create({\n    baseURL: `${API_URL}`\n});\n\nexport default url;","import {\n  API_KEY,\n  API_IMG_URL\n} from '../constants/api';\nimport axios from '../axios/url';\n\nimport { Theme } from '../models/index';\n\nconst apiService: { storeKey: string, store: { history: number[], favorites: number[], theme: any }, } = {\n  storeKey: 'service',\n  store: {\n    history: [],\n    favorites: [],\n    theme: Theme.light\n  },\n}\n\nconst api = {\n  getStore() {\n    const serviceStore: any = localStorage.getItem(apiService.storeKey);\n    serviceStore !== null\n      ? apiService.store = JSON.parse(serviceStore)\n      : this.setStore();\n    return apiService.store;\n  },\n\n  setStore(data: Object = {\n    history: [],\n    favorites: [],\n    theme: 1\n  }) {\n    localStorage.setItem(apiService.storeKey, JSON.stringify(data));\n  },\n\n  switchTheme() {\n    const store = this.getStore();\n    store.theme = (store.theme === Theme.light) ? Theme.dark : Theme.light;\n    this.setStore(store);\n    return store.theme;\n  },\n\n  setFavoritesId(id: number) {\n    const store = this.getStore();\n    const isThereAnId = store.favorites.includes(id);\n    if (isThereAnId) {\n      store.favorites.push(id)\n    };\n    this.setStore(store);\n  },\n\n  getFavoritsIdList() {\n    const { favorites } = this.getStore();\n    return favorites;\n  },\n\n  deleteFavoritsId(id: number) {\n    const store = this.getStore();\n    store.favorites = store.favorites.filter((itemId: number) => itemId !== id);\n    this.setStore(store);\n  },\n\n  clearFavoritsIdList() {\n    const store = this.getStore();\n    store.favorites = [];\n    this.setStore(store);\n  },\n\n  setHistoryId(id: number) {\n    const store = this.getStore();\n    const isThereAnId = store.history.includes(id);\n    if (isThereAnId) {\n      store.history.push(id)\n    };\n    this.setStore(store);\n  },\n\n  getHistoryIdList() {\n    const { history } = this.getStore();\n    return history;\n  },\n\n  deleteHistoryId(id: number) {\n    const store = this.getStore();\n    store.history = store.history.filter((itemId: number) => itemId !== id);\n    this.setStore(store);\n  },\n\n  clearHistoryIdList() {\n    apiService.store.history = [];\n    this.setStore(apiService.store);\n  },\n\n  getDataByIds(ids: number[]) {\n    const urls = ids.map((id: number) => `movie/${id}?${API_KEY}`);\n    const requests = urls.map(\n      async (url: any) => await axios.get(url).then((res: { data: any; }) => res.data)\n    );\n    return Promise.all(requests)\n  },\n\n  async getDataById(id: number) {\n    const obj = await axios.get(`movie/${id}?${API_KEY}`);\n    return obj.data.results;\n  },\n\n  async getPopularQueryList() {\n    const obj = await axios.get(`movie/popular?${API_KEY}&query`);\n    return obj.data.results;\n  },\n\n  async getTopRatedList() {\n    const obj = await axios.get(`movie/top_rated?translations&${API_KEY}&region=US`);\n    return obj.data.results;\n  },\n\n  async getSearchList(query: string) {\n    let obj = await axios.get(`search/movie?${API_KEY}&query=${query}`);\n    return obj.data.results;\n  },\n\n  changeImgLinks(url: string, size: string) {\n    return `${API_IMG_URL}${size}${url}`;\n  },\n}\n\nexport default api;","import { useEffect, useState } from 'react';\n\nimport Container from './Container';\nimport PopularMovie from './PopularMovie';\nimport { Movie } from '../models/index';\n\nimport api from '../service/api';\n\nimport '../styles/MovieBanner.scss';\n\nconst MovieBanner = () => {\n  const [popularMovies, setPopularMovies] = useState<Movie[]>([]);\n\n  const getPopularMovies = (): void => {\n     api.getPopularQueryList().then(data => {\n       setPopularMovies(data);\n     });\n  };\n\n  useEffect(() => {\n    getPopularMovies();\n  }, []);\n\n  const randomMovie =\n    popularMovies[Math.floor(Math.random() * popularMovies.length)];\n\n  return (\n    <section className=\"movie-banner\">\n      <Container>\n        {randomMovie && <PopularMovie movie={randomMovie} />}\n      </Container>\n    </section>\n  );\n};\n\nexport default MovieBanner;\n","import { ReactNode } from 'react';\nimport { useParams } from 'react-router';\n\ntype Query = {\n  id: string;\n  title: string;\n  genre: string;\n};\n\ntype MoviesListProps = {\n  pageTitle: string;\n  children?: ReactNode;\n};\n\nconst MoviesList = (props: MoviesListProps) => {\n  const { title, genre }: Query = useParams();\n  const { pageTitle } = props;\n\n  return (\n    <div className=\"movies-list\">\n      <h1>{pageTitle}</h1>\n      <p>title param: {title}</p>\n      <p>genre param: {genre}</p>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import Home from '../components/Home';\nimport MovieDetails from '../components/MovieDetails';\nimport Favorites from '../components/Favorites';\nimport SearchResults from '../components/SearchResults';\n\nexport default [\n  {\n    path: '/',\n    name: 'Home',\n    exact: true,\n    component: Home\n  },\n  {\n    path: '/movie-details/:id',\n    name: 'Movie details',\n    exact: false,\n    component: MovieDetails\n  },\n  {\n    path: '/favorites',\n    name: 'Favorites',\n    exact: false,\n    component: Favorites\n  },\n  {\n    path: '/search-results',\n    name: 'Search results',\n    exact: false,\n    component: SearchResults\n  }\n];\n","import MovieBanner from './MovieBanner';\n\nconst Home = () => {\n  return <MovieBanner />;\n};\n\nexport default Home;\n","const MovieDetails = () => {\n  return (\n    <div>\n      <p>Movie details</p>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import MoviesList from './MoviesList'\n\nconst Favorites = () => {\n  return (\n    <div className='favorites-wrapper'>\n      <MoviesList pageTitle='Favorites' />\n    </div>\n  );\n};\n\nexport default Favorites;","import MoviesList from './MoviesList';\n\nconst SearchResults = () => {\n  return (\n    <div className=\"search-wrapper\">\n      <MoviesList pageTitle=\"Search Results\" />\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport routing from './config/routing';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Layout>\n          <Switch>\n            {routing.map(item => {\n              return (\n                <Route\n                  exact={item.exact}\n                  path={item.path}\n                  component={item.component}\n                />\n              );\n            })}\n          </Switch>\n        </Layout>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}